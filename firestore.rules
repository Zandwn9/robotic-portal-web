rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /clients/{client}{
      match /public/info{
              allow read: if true;
            }
        function staffOrEmployee(company) {
            return  get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.company in [company, "Robotic Imaging"]
        }
        
    	allow read: if staffOrEmployee(client);

        match /projects/{project} {

            function staffOrPermissions(permissionsLevel) {
                let isStaff = get(/databases/$(database)/documents/users/$(request.auth.token.email)).data.company == "Robotic Imaging";
                let hasAccess = resource.data.roles[request.auth.token.email] >= permissionsLevel;
                return  isStaff || hasAccess
            }

      	  allow create: if staffOrEmployee(client);
          allow delete: if staffOrPermissions(3);
          allow write: if staffOrPermissions(2);
          allow read: if staffOrPermissions(1);
        }
    }
    match /users/{userId}{
    	allow write: if true;
    	allow read: if request.auth.token.email == userId
    }
  }
}